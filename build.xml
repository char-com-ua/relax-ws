<?xml version="1.0" encoding="UTF-8"?>
<!--

Relax-WS build file (ant).

You will need:
* ant 1.7.0 (may work with 1.6)
* javacc 5.0 will be downloaded automatically or do it manually into depends dir

Example build (OS-X):
  export GROOVY_HOME=/Users/jsando/Downloads/groovy-1.5.1

  ant -Djavacc.home=/Users/jsando/Downloads/javacc-4.0 release
  
-->
<project name="relaxws" default="build" basedir=".">

	<property name="app.version" value="0.2.2"/>
	<property name="release.name" value="${ant.project.name}-${app.version}"/>
	<property name="javacc.ver" value="javacc-5.0" />
	<property name="javacc.url" value="http://java.net/projects/javacc/downloads/download/${javacc.ver}.zip" />

	<property name="javacc.home" location="depends/${javacc.ver}"/>
	<property name="javacc.zip" location="${javacc.ver}.zip"/>
	
	<property name="build.home" value="${basedir}/build"/>
	<property name="dist.base" value="${build.home}/dist"/>
	<property name="dist.home" value="${dist.base}/${release.name}"/>

	<path id="compile.classpath">
		<fileset dir="lib" includes="*.jar"/>
	</path>

	<path id="test.classpath">
		<path refid="compile.classpath"/>
		<pathelement path="${build.home}/classes"/>
	</path>

	<condition property="run-get-jcc" >
		<not>
			<or>
				<available file="${javacc.home}/bin" type="dir"/>
				<available file="${javacc.zip}" type="dir"/>
			</or>
		</not>
	</condition>

	<condition property="run-ext-jcc" >
		<and>
			<not><available file="${javacc.home}/bin" type="dir"/></not>
			<available file="${javacc.zip}" type="dir"/>
		</and>
	</condition>

	<target name="clean">
		<delete dir="build"/>
	</target>
	
	<target name="get-jcc" if="run-get-jcc" >
		<get src="${javacc.url}" dest="${javacc.ver}.zip" />
	</target>
	
	<target name="ext-jcc" if="run-ext-jcc">
		<mkdir dir="depends"/>
		<unzip src="${javacc.zip}" dest="depends/" />
		<delete file="${javacc.zip}"/>
	</target>

	<target name="build" depends="get-jcc,ext-jcc">
		<mkdir dir="build"/>

		<jjtree
				target="src/com/google/code/p/relaxws/parser/RelaxWiz.jjt"
				outputdirectory="src/com/google/code/p/relaxws/parser/"
				javacchome="${javacc.home}"
				nodeusesparser="true"
				buildnodefiles="true"
				static="false"
				multi="true"
				nodeprefix="AST"
				nodepackage="com.google.code.p.relaxws.parser"
				/>

		<javacc
				target="src/com/google/code/p/relaxws/parser/RelaxWiz.jj"
				outputdirectory="src/com/google/code/p/relaxws/parser/"
				javacchome="${javacc.home}"
				lookahead="1"
				choiceambiguitycheck="2"
				otherambiguitycheck="1"
				static="false"
				
				errorreporting="true"
				buildparser="true"
				buildtokenmanager="true"
				sanitycheck="true"
				/>

		<!-- Compile Java classes as necessary -->
		<mkdir dir="${build.home}/classes"/>
		<javac srcdir="src"
			   destdir="${build.home}/classes"
			   debug="true"
			   deprecation="false"
			   optimize="true"
			   source="1.5"
			   includeAntRuntime="no" >
			<classpath refid="compile.classpath"/>
		</javac>
		
		<mkdir dir="${dist.home}/lib"/>
		<jar jarfile="${dist.home}/lib/${ant.project.name}.jar">
			<zipfileset dir="${build.home}/classes"/>
			<zipgroupfileset dir="lib" includes="*.jar"/>
			<manifest>
				<attribute name="Main-Class" value="com.google.code.p.relaxws.Convert2Wsdl"/>
			</manifest>
		</jar>

	</target>

	<target name="test" description="test">

		<java classpathref="test.classpath"
			  classname="com.google.code.p.relaxws.Convert2Wsdl" fork="true">
			<arg line="-d ${build.home} -encoding windows-1251 samples/hello.rws"/>
		</java>
	</target>

	<target name="release" depends="clean,build,test" description="Build release package.">

		<copy todir="${dist.home}">
			<fileset dir="./doc/" includes="*.txt" />
		</copy>
		<copy todir="${dist.home}" >
			<fileset dir="./" includes="samples/*.*"/>
		</copy>

		<zip basedir="${dist.base}"
			zipfile="${dist.base}/${release.name}.zip"
			includes="${release.name}/**"/>

	</target>

</project>
