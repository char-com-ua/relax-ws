/* Generated By:JJTree: Do not edit this line. ASTinDecl.java */

package com.google.code.p.relaxws.parser;

import com.google.code.p.relaxws.parser.SimpleNode;
import com.google.code.p.relaxws.parser.RelaxWizParser;
import com.google.code.p.relaxws.parser.ASTrnc;

public class ASTMessageDef extends SimpleNode {
    public static enum MessageType {
        In, Out, Fault
    }

    private String name;
    private String messageName;
    private MessageType type;

    public ASTMessageDef(int id) {
        super(id);
    }

    public ASTMessageDef(RelaxWizParser p, int id) {
        super(p, id);
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public MessageType getType() {
        return type;
    }

    public void setType(MessageType type) {
        this.type = type;
    }

    public String getMessageName() {
        return messageName;
    }

    public void setMessageName(String messageName) {
        this.messageName = messageName;
    }

    public void setDefaultMessageName (String operation) {
        switch (type) {
            case In: setMessageName(operation + "Input"); break;
            case Out: setMessageName(operation + "Output"); break;
            case Fault: setMessageName(operation + "Fault"); break;
            default:
                throw new IllegalArgumentException ("Unknown message type.");
        }
    }

    public void setDefaultName(String operation) {
        switch (type) {
            case In: setName (operation + parser.root().getOption("in-suffix") ); break;
            case Out: setName (operation + parser.root().getOption("out-suffix") ); break;
            case Fault: setName (operation + parser.root().getOption("fault-suffix") ); break;
            default:
                throw new IllegalArgumentException ("Unknown message type.");
        }
    }

    public String getRnc() {
        if (children.length > 0) {
            return ((ASTrnc) children[0].jjtGetChild(0)).getRnc();
        }
        return null;
    }
}