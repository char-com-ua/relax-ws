<?xml version="1.0" encoding="UTF-8"?>
<!--

Relax-WS build file (ant).

You will need:
* ant 1.7.0 (may work with 1.6)
* groovy 1.5.1, and GROOVY_HOME env var pointing to where it's installed
* javacc 4.0, and javacc.home point to where it's installed

Example build (OS-X):
  export GROOVY_HOME=/Users/jsando/Downloads/groovy-1.5.1

  ant -Djavacc.home=/Users/jsando/Downloads/javacc-4.0 release
  
-->
<project name="relaxws" default="build" basedir=".">

    <property name="app.version" value="0.1"/>
    <property name="release.name" value="${ant.project.name}-${app.version}"/>

    <property name="javacc.home" value=""/>
    <property name="build.home" value="${basedir}/build"/>
    <property name="dist.base" value="${build.home}/dist"/>
    <property name="dist.home" value="${dist.base}/${release.name}"/>

    <property environment="env"/>

    <path id="groovy.classpath">
        <fileset dir="${env.GROOVY_HOME}/embeddable/"/>
    </path>

    <taskdef name="groovyc" classname = "org.codehaus.groovy.ant.Groovyc"
            classpathref="groovy.classpath"/>

    <path id="compile.classpath">
        <fileset dir="lib" includes="*.jar"/>
        <path refid="groovy.classpath"/>
    </path>

    <path id="test.classpath">
        <path refid="compile.classpath"/>
        <pathelement path="${build.home}/classes"/>
    </path>

    <target name="clean">
        <delete dir="build"/>
    </target>

    <target name="build">
        <mkdir dir="build"/>

        <jjtree
                target="src/com/google/code/p/relaxws/parser/RelaxWiz.jjt"
                outputdirectory="src/com/google/code/p/relaxws/parser/"
                javacchome="${javacc.home}"
                nodeusesparser="true"
                buildnodefiles="true"
                static="false"
                multi="true"
                nodeprefix="AST"
                nodepackage="com.google.code.p.relaxws.parser"
                />

        <javacc
                target="src/com/google/code/p/relaxws/parser/RelaxWiz.jj"
                outputdirectory="src/com/google/code/p/relaxws/parser/"
                javacchome="${javacc.home}"
                lookahead="1"
                choiceambiguitycheck="2"
                otherambiguitycheck="1"
                static="false"
                optimizetokenmanager="true"
                errorreporting="true"
                buildparser="true"
                buildtokenmanager="true"
                sanitycheck="true"
                />

        <!-- Compile Java classes as necessary -->
        <mkdir dir="${build.home}/classes"/>
        <!--<javac srcdir="src"-->
               <!--destdir="${build.home}/classes"-->
               <!--debug="true"-->
               <!--deprecation="false"-->
               <!--optimize="true"-->
               <!--source="1.5"-->
               <!--includeAntRuntime="no">-->
            <!--<classpath refid="compile.classpath"/>-->
        <!--</javac>-->

        <groovyc srcdir="src" destdir="${build.home}/classes">
            <classpath refid="compile.classpath"/>
            <javac source="1.5" debug="on" optimize="on"/>
        </groovyc>

    </target>

    <target name="test" depends="build" description="test">

        <java classpathref="test.classpath"
              classname="com.google.code.p.relaxws.Convert2Wsdl" fork="true">
            <arg line="-d build doc/sample1.rws"/>
        </java>

        <java classpathref="test.classpath"
              classname="com.google.code.p.relaxws.Convert2Wsdl" fork="true">
            <arg line="-d build doc/hello.rws"/>
        </java>

        <java classpathref="test.classpath"
              classname="com.google.code.p.relaxws.Convert2Wsdl" fork="true">
            <arg line="-d build doc/multiport.rws"/>
        </java>

        <!-- Playing with groovy -->
        <java classpathref="test.classpath"
              classname="com.google.code.p.relaxws.Groovy2Wsdl" fork="true">
            <arg line="-d build doc/sample1.rws"/>
        </java>

    </target>

    <target name="release" depends="clean,build,test" description="Build release package.">

        <mkdir dir="${dist.home}"/>
        <!--<mkdir dir="${dist.home}/lib"/>-->

        <!--<jar jarfile="${dist.home}/lib/${ant.project.name}.jar">-->
            <!--<fileset dir="${build.home}/classes"/>-->
        <!--</jar>-->

        <jar jarfile="${dist.home}/${ant.project.name}.jar">
            <zipfileset dir="${build.home}/classes"/>
            <zipgroupfileset dir="lib" includes="*.jar"/>
            <manifest>
                <attribute name="Main-Class" value="com.google.code.p.relaxwsws.Convert2Wsdl"/>
            </manifest>
        </jar>


        <!--<copy todir="${dist.home}/lib">-->
            <!--<fileset dir="${basedir}/lib" includes="*.jar"/>-->
        <!--</copy>-->

        <zip basedir="${dist.base}"
             zipfile="${dist.base}/${release.name}.zip"
             includes="${release.name}/**"/>

    </target>

</project>